name: CI/CD Pipeline

on:
  push:
    branches:
      - bass

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Récupère le code source du repository
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Configure Docker Buildx pour le build multi-plateforme
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Se connecte à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build et push l'image Docker
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./api-platform/api
          push: true
          tags: bass913/challenge-pilot:latest

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     # Récupère le code source du repository
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     # Installe la clé SSH pour se connecter au serveur distant
  #     - name: Install SSH key
  #       uses: webfactory/ssh-agent@v0.9.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

  #     # Déploie l'image Docker sur DigitalOcean
  #     - name: Deploy to DigitalOcean
  #       env:
  #         DOCKER_HOST: ssh://root@your-droplet-ip
  #       run: |
  #         docker pull your-docker-username/your-repo-name:latest
  #         docker stop your-container-name || true
  #         docker rm your-container-name || true
  #         docker run -d --name your-container-name -p 80:80 your-docker-username/your-repo-name:latest
