name: CI/CD Pipeline

on:
  push:
    branches:
      - bass

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Récupère le code source du repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Configurer SSH pour se connecter au Droplet DigitalOcean
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      # Copier les fichiers vers le serveur distant
      - name: Copy files to server
        run: |
          scp -o StrictHostKeyChecking=no -r ./* root@143.244.189.241:/var/www/html
      # Déployer sur le Droplet DigitalOcean
      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh -o StrictHostKeyChecking=no root@143.244.189.241 << 'EOF'
          cd /var/www/html/api-platform
          docker compose down
          SERVER_NAME=challenge.pilot.us.to \
          DATABASE_URL=postgres://gibhwigg:G451SbOGgg4WxbxsqcabFEfenMIycNJ4@kandula.db.elephantsql.com/gibhwigg \
          APP_SECRET=ChangeMe \
          POSTGRES_PASSWORD=ChangeMe \
          CADDY_MERCURE_JWT_SECRET=ChangeThisMercureHubJWTSecretKey \
          docker compose -f compose.yaml -f compose.prod.yaml up --wait
          EOF
